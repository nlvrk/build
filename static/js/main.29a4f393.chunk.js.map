{"version":3,"sources":["socket.js","reducer.js","components/JoinBlock.jsx","components/Chat.jsx","App.js","index.js"],"names":["socket","io","state","action","type","joined","userName","payload","roomId","users","messages","JoinBlock","onLogin","React","useState","setRoomId","setUserName","isLoading","setLoading","onEnter","a","alert","obj","axios","post","className","placeholder","value","onChange","e","target","Button","variant","color","disabled","onClick","Chat","onAddMessage","messageValue","setMessageValue","messagesRef","useRef","useEffect","current","scrollTo","length","map","name","index","key","ref","message","text","rows","emit","useStyles","makeStyles","theme","root","flexGrow","menuButton","marginRight","spacing","title","mainFeaturesPost","position","palette","common","white","marginBottom","backgroundSize","backgroundRepeat","backgroundPosition","width","height","mainFeaturesPostContent","paddingTop","paddingRight","paddingLeft","paddingTBottom","marginTop","overlay","top","bottom","right","left","backgroundColor","forma","marginLeft","align","mainButtons","App","useReducer","reducer","dispatch","classes","get","data","setUsers","addMessage","on","window","AppBar","Container","fixed","Toolbar","IconButton","edge","aria-label","Typography","Paper","style","backgroundImage","Grid","container","item","md","component","gutterBottom","paragraph","href","mainContent","maxWidth","noValidate","autoComplete","id","variaant","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.29a4f393.chunk.js","sourcesContent":["import io from 'socket.io-client';\nconst socket = io();\nexport default socket;\n","export default (state, action) => {\n  switch (action.type) {\n    case 'JOINED':\n      return {\n        ...state,//старое состояние\n        joined: true,//подключились\n        userName: action.payload.userName,\n        roomId: action.payload.roomId,\n      };\n\n    case 'SET_DATA':\n      return {\n        ...state,\n        users: action.payload.users,\n        messages: action.payload.messages,\n      };\n\n    case 'SET_USERS':\n      return {\n        ...state,\n        users: action.payload,\n      };\n\n    case 'NEW_MESSAGE':\n      return {\n        ...state,\n        messages: [...state.messages, action.payload],\n      };\n\n    default:\n      return state;\n  }\n};\n","import React from 'react';\nimport axios from 'axios';//библиотека для пост гет запросов\nimport Button from '@material-ui/core/Button';\n\n\nfunction JoinBlock({ onLogin }) {\n  const [roomId, setRoomId] = React.useState('');//переменная которая регулирует ввод данных в input данные сначала в переменну а потом в input\n  const [userName, setUserName] = React.useState('');\n  const [isLoading, setLoading] = React.useState(false);\n\n  const onEnter = async () => {//если какое либо поле пустое ошибка\n    if (!roomId || !userName) {\n      return alert('Неверные данные');\n    }\n    const obj = {//объект\n      roomId,\n      userName,\n    };\n    setLoading(true);\n    await axios.post('/rooms', obj);\n    onLogin(obj);//отправка данных post запрос на сервер\n  };\n\n  return (\n    <div className=\"join-block\">\n      <input\n        type=\"text\"\n        placeholder=\"Ваша Группа\"\n        value={roomId}\n        onChange={(e) => setRoomId(e.target.value)}//событие нажатия клавиши\n      />\n      <input\n        type=\"text\"\n        placeholder=\"Ваше имя\"\n        value={userName}\n        onChange={(e) => setUserName(e.target.value)}\n      />\n      <Button variant=\"contained\" color=\"secondary\" disabled={isLoading} onClick={onEnter} className=\"btn btn-success\">\n      {isLoading ? 'ВХОД...' : 'ВОЙТИ'}\n      </Button>\n      \n    </div>\n  );\n}\n\nexport default JoinBlock;\n","import React from 'react';\nimport socket from '../socket';\nimport Button from '@material-ui/core/Button';\n\nfunction Chat({ users, messages, userName, roomId, onAddMessage }) {\n  const [messageValue, setMessageValue] = React.useState('');\n  const messagesRef = React.useRef(null);\n\n  const onSendMessage = () => {\n    socket.emit('ROOM:NEW_MESSAGE', {\n      userName,\n      roomId,\n      text: messageValue,\n    });\n    onAddMessage({ userName, text: messageValue });\n    setMessageValue('');\n  };\n\n  React.useEffect(() => {\n    messagesRef.current.scrollTo(0, 99999);\n  }, [messages]);\n\n  return (\n    \n    <div className=\"chat\">\n      <div className=\"chat-users\">\n        Группа: <b>{roomId}</b>\n        <hr />\n        <b>Онлайн ({users.length}):</b>\n        <ul>\n          {users.map((name, index) => (\n            <li key={name + index}>{name}</li>\n          ))}\n        </ul>\n      </div>\n      <div className=\"chat-messages\">\n        <div ref={messagesRef} className=\"messages\">\n          {messages.map((message) => (\n            <div className=\"message\">\n              <p>{message.text}</p>\n              <div>\n                <span>{message.userName}</span>\n              </div>\n            </div>\n          ))}\n        </div>\n        <form>\n          <textarea\n            value={messageValue}\n            onChange={(e) => setMessageValue(e.target.value)}\n            className=\"form-control\"\n            rows=\"3\"></textarea>\n              <Button variant=\"contained\" color=\"primary\" onClick={onSendMessage} type=\"button\" className=\"btn btn-primary\" >\n                Отправить\n              </Button>\n        </form>\n      </div>\n    </div>\n  );\n}\n\nexport default Chat;\n","\nimport axios from 'axios';\nimport socket from './socket';\nimport reducer from './reducer';\nimport JoinBlock from './components/JoinBlock';\nimport Chat from './components/Chat';\nimport { AppBar, Container, Toolbar, Typography, Paper, IconButton, Grid } from '@material-ui/core'\nimport Button from '@material-ui/core/Button';\nimport { makeStyles } from '@material-ui/core/styles';\nimport EmojiPeopleIcon from '@material-ui/icons/EmojiPeople';\nimport React from 'react';\n\n\n\n\n\nconst useStyles = makeStyles((theme) =>({\n  root: {\n    flexGrow: 1\n  },\n  menuButton: {\n    marginRight: theme.spacing(1),\n  },\n  title: {\n    flexGrow: 1\n  },\n  mainFeaturesPost: {\n    position: 'relative',\n    color: theme.palette.common.white,\n    marginBottom: theme.spacing(4),\n    backgroundSize: \"cover\",\n    backgroundRepeat: \"no-repeat\",\n    backgroundPosition: \"center\",\n    width: \"100%\",\n    height: \"550px\"\n\n  },\n  mainFeaturesPostContent: {\n    position: 'relative',\n    paddingTop: theme.spacing(6),\n    paddingRight: theme.spacing(0),\n    paddingLeft: theme.spacing(1),\n    paddingTBottom: theme.spacing(2),\n    marginTop: theme.spacing(9),\n  },\n  overlay:{\n    position: 'absolute',\n    top: 0,\n    bottom: 0,\n    right: 0,\n    left: 0,\n    backgroundColor: \"rgba(0,0,0,.7)\"\n  },\n  forma:{\n    marginRight: \"auto\",\n    marginLeft: \"auto\",\n    align: \"center\",\n    width: \"100%\",\n    marginTop: \"50px\"\n  },\n  mainButtons:{\n\n  },\n\n\n}))\n\n\n\nfunction App() {\n  const [state, dispatch] = React.useReducer(reducer, {//принимает предыдущее состояние и действие а возвращает следующее состояние\n    joined: false,\n    roomId: null,\n    userName: null,\n    users: [],\n    messages: [],\n  });\n\n  const classes = useStyles();\n\n  const onLogin = async (obj) => {\n    dispatch({//зашли в нужный чат \n      type: 'JOINED',\n      payload: obj,\n    });\n    socket.emit('ROOM:JOIN', obj);//отправляем запрос сокету emit отправка запроса на бэк\n    const { data } = await axios.get(`/rooms/${obj.roomId}`);//отправка в конкретный чат\n    dispatch({\n      type: 'SET_DATA',\n      payload: data,\n    });\n  };\n\n  const setUsers = (users) => {\n    dispatch({\n      type: 'SET_USERS',\n      payload: users,\n    });\n  };\n\n  const addMessage = (message) => {\n    dispatch({\n      type: 'NEW_MESSAGE',\n      payload: message,\n    });\n  };\n\n  React.useEffect(() => {//подключение пользователей к одному чату с разными именами (каждое обновление новый пользователь)\n    socket.on('ROOM:SET_USERS', setUsers);//те кто есть в чате узнают кто подключился к чату\n    socket.on('ROOM:NEW_MESSAGE', addMessage);\n  }, []);\n\n  window.socket = socket;\n\n  return (\n    <>\n        <AppBar position=\"fixed\">\n          <Container fixed>\n            <Toolbar>\n              <IconButton edge=\"start\" color=\"inherit\" aria-label=\"menu\" className={classes.menuButton}>\n                <EmojiPeopleIcon />\n              </IconButton>\n              <Typography variant=\"h6\" className={classes.title}>Выпускники</Typography>\n            </Toolbar>\n          </Container>\n        </AppBar>\n\n        <main>\n\n          <Paper className={classes.mainFeaturesPost} \n          style={{backgroundImage: 'url(https://cdn.pixabay.com/photo/2017/02/07/10/33/crowd-2045499_1280.jpg)'}}>\n            <Container fixed>\n              <div className={classes.overlay}></div>\n              <Grid container>\n                <Grid item md={6} >\n                  <div className={classes.mainFeaturesPostContent}>\n                    <Typography\n                    component=\"h1\"\n                    variant=\"h3\"\n                    color=\"inherit\"\n                    gutterBottom>\n                      Веб-чат для выпускников\n                    </Typography>\n                    <Typography\n                    variant=\"h5\"\n                    color=\"inherit\"\n                    paragraph>\n                      В этом чате вы можете пообщаться со своими одногруппниками.\n                       Для этого нужен только номер группы в которой вы учились\n                    </Typography>\n                        <Button variant=\"contained\" color=\"secondary\" href=\"#bot\" >К чату</Button>\n                  </div>\n                </Grid>\n              </Grid>\n            </Container>\n          </Paper>\n          <div className={classes.mainContent}>\n            <Container maxWidth=\"sm\">\n              <Grid Container>\n                  <Grid item md={12}>\n              <Typography variant=\"h2\" align=\"center\" color=\"textPrimary\" gutterBottom>Поздравь ОмГТУ!</Typography>\n              <Typography variant=\"h5\" align=\"center\" color=\"textSecondary\" gutterBottom>Здесь вы можете написать своё поздравление</Typography>\n              <form className={classes.forma} noValidate autoComplete=\"off\">\n                <textarea  style={{width: \"100%\"}}></textarea>\n                <Grid item>\n                <Button variant=\"contained\" color=\"secondary\" type=\"submit\" style={{marginLeft: \"40%\"}} >Отправить</Button>\n                </Grid>\n                </form>\n                <Typography style={{marginTop: '150px'}} variant=\"h2\" align=\"center\" color=\"textPrimary\">Веб-чат</Typography> \n                  </Grid>\n                </Grid>\n            </Container>\n          </div>\n        </main>\n        \n    \n    <div className=\"wrapper\">\n      {!state.joined ? (\n        <JoinBlock onLogin={onLogin} />//если не авторизован то получаем форму входа\n      ) : (\n        <Chat {...state} onAddMessage={addMessage} />\n      )}\n    </div>\n        <footer>\n          <a id=\"bot\" />\n          <Typography align=\"center\" color=\"textSecondary\" component=\"p\" variaant=\"subtitle\" gutterBottom>© 2021 All Right Reserved</Typography>\n        </footer>\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}